#!/usr/bin/env node

var fs = require('fs');
var commander = require('commander');
var color = require('colorful').color;
var spmrc = require('spm').sdk.spmrc;

/*
  init directory
*/

var initDir = (spmrc.get('init.template') || '~/.spm/init').replace(/^~/, process.env.HOME);

/*
  available templates
*/

var template = {};

// template in ~/.spm/init
if (!fs.existsSync(initDir)) {
  fs.mkdirSync(initDir);
}
var t = fs.readdirSync(initDir);
for (var i in t) {
  template[t[i]] = path.join(initDir, t[i]);
}

// default template

/*
  commander init
*/

commander.usage('[template]');
commander.on('--help', function() {
  console.log();
  console.log('  Available templates:');
  console.log();
  for (var i in templates) {
    console.log('    ' + i);
  }
  console.log();
  console.log('  Change init directory in ~/.spm/spmrc');
  console.log();
  console.log('  [init]');
  console.log('  template = ~/.spm/init');
  console.log();
});
commander.parse(process.argv);

/*
  show help
*/

var cmd = commander.args[0];
if (!cmd || templates.indexOf(cmd) === -1) {
  // argu not exist
  if (cmd) {
    console.log();
    console.log(color.red('  Template "' + cmd + '" not exist.'));
  }
  // no argu
  process.stdout.write(commander.helpInformation());
  commander.emit('--help');
  process.exit();
}


